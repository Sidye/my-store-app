{"ast":null,"code":"var _jsxFileName = \"G:\\\\my-store-app\\\\my-store-app\\\\src\\\\pages\\\\ProductListPage.js\",\n  _s = $RefreshSig$();\n// src/pages/ProductListPage.js\nimport React, { useState, useEffect } from 'react';\nimport ProductCard from '../components/ProductCard';\nimport './ProductListPage.css'; // Создадим файл для стилей\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductListPage = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const url = 'https://fakestoreapi.com/products';\n  useEffect(() => {\n    const fetchProducts = async () => {\n      setLoading(true);\n      setError(null); // Сбрасываем ошибку перед новым запросом\n      try {\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setProducts(data);\n      } catch (e) {\n        console.error(\"Ошибка при загрузке товаров:\", e);\n        setError(`Не удалось загрузить товары. ${e.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProducts();\n  }, []); // Пустой массив зависимостей - запускаем эффект один раз при монтировании\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message\",\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message error-message\",\n      children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-list-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-grid\",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n        product: product\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductListPage, \"3+N/VFIgZOBgubN9oS5aTzm2qqY=\");\n_c = ProductListPage;\nexport default ProductListPage;\nvar _c;\n$RefreshReg$(_c, \"ProductListPage\");","map":{"version":3,"names":["React","useState","useEffect","ProductCard","jsxDEV","_jsxDEV","ProductListPage","_s","products","setProducts","loading","setLoading","error","setError","url","fetchProducts","response","fetch","ok","Error","status","data","json","e","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","id","_c","$RefreshReg$"],"sources":["G:/my-store-app/my-store-app/src/pages/ProductListPage.js"],"sourcesContent":["// src/pages/ProductListPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport ProductCard from '../components/ProductCard';\r\nimport './ProductListPage.css'; // Создадим файл для стилей\r\n\r\nconst ProductListPage = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const url = 'https://fakestoreapi.com/products';\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      setLoading(true);\r\n      setError(null); // Сбрасываем ошибку перед новым запросом\r\n      try {\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setProducts(data);\r\n      } catch (e) {\r\n        console.error(\"Ошибка при загрузке товаров:\", e);\r\n        setError(`Не удалось загрузить товары. ${e.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []); // Пустой массив зависимостей - запускаем эффект один раз при монтировании\r\n\r\n  if (loading) {\r\n    return <div className=\"status-message\">Загрузка товаров...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"status-message error-message\">Ошибка: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"product-list-page\">\r\n      <h1>Список товаров</h1>\r\n      <div className=\"product-grid\">\r\n        {products.map((product) => (\r\n          <ProductCard key={product.id} product={product} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductListPage;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAO,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,GAAG,GAAG,mCAAmC;EAE/CZ,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChCJ,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;MAChB,IAAI;QACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;QACjC,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC3D;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCb,WAAW,CAACY,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOE,CAAC,EAAE;QACVC,OAAO,CAACZ,KAAK,CAAC,8BAA8B,EAAEW,CAAC,CAAC;QAChDV,QAAQ,CAAC,gCAAgCU,CAAC,CAACE,OAAO,EAAE,CAAC;MACvD,CAAC,SAAS;QACRd,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDI,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,IAAIL,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAKqB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAClE;EAEA,IAAInB,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAKqB,SAAS,EAAC,8BAA8B;MAAAC,QAAA,GAAC,wCAAQ,EAACf,KAAK;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC5E;EAEA,oBACE1B,OAAA;IAAKqB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCtB,OAAA;MAAAsB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB1B,OAAA;MAAKqB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BnB,QAAQ,CAACwB,GAAG,CAAEC,OAAO,iBACpB5B,OAAA,CAACF,WAAW;QAAkB8B,OAAO,EAAEA;MAAQ,GAA7BA,OAAO,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAClD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CA/CID,eAAe;AAAA6B,EAAA,GAAf7B,eAAe;AAiDrB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}